= render partial: 'shared/js_templates/unit_conversion_popover_template', locals: {set_units_data: true}
- new_articles = (@order.supplier.articles.undeleted rescue @order.articles)
- current_article_ids = @order_articles.map { |oa| oa.article_version.article_id }
- new_article_data = articles_for_select2(new_articles, current_article_ids) {|a| "#{a.name} (#{a.unit_quantity}тип#{a.unit})"}
- content_for :javascript do
  :javascript
    $('.units_received').each((_, field) => $(field).unitConversionField({
      units: unitsData,
      popoverTemplate$: $('#unit_conversion_popover_content_template'),
      useTargetUnitForStep: false
    }));
    $('table#order_articles').parents('form').receiveOrderForm({packageHelperIcon: '#{j pkg_helper_icon}', newOrderArticlePath:'#{order_order_articles_path(@order)}'});
%table#order_articles.ordered-articles.table.table-striped.stupidtable{style: 'margin-bottom: 0'}
  %thead
    %tr
      %th.sort{:data => {:sort => 'string'}}= heading_helper Article, :order_number, short: true
      %th.sort{:data => {:sort => 'string'}}= heading_helper Article, :name
      %th.sort{:data => {:sort => 'string'}}= heading_helper Article, :unit
      %th= heading_helper Article, :price
      %th= heading_helper OrderArticle, :quantity, short: true
      %th= heading_helper OrderArticle, :units_to_order, short: true
      -#%th Invoice # TODO implement invoice screen
      %th= heading_helper OrderArticle, :units_received, short: true
      %th
      %th= t 'ui.actions'
  %tbody#result_table
    - @order_articles.each do |order_article|
      = render :partial => 'edit_amount', :locals => {:order_article => order_article}
  %tfoot
    %tr
      %th{colspan: 6}
        %select#add_article{:style => 'width: 500px;'}
          - new_article_data.each do |option|
            %option{id: "add_article_#{option[:id]}", value: option[:id]}= option[:text]
      %th{colspan: 4}
        %button.btn#set_all_to_zero{type: :button}
          = t '.set_all_to_zero'
