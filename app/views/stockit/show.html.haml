- title @stock_article.name
- content_for :javascript do
  :javascript
    $(function() {
    
    #{##########################################################################
    # Publish/subscribe pattern for loose coupling of
    #   (1) AJAX database manipulation and
    #   (2) DOM updates for the particular view
    ############################################################################
    # * THIS STARTS STEP (2)
    # * subscribe to document's events which are published/triggered by step (1)
    # * possibly launch a second AJAX request to retreive the source code of the
    #   new DOM elements
    #
    # NOTE: This is a special case because the same controller (stockit) is
    # responsible for steps (1) and (2). However, there are other views which
    # employ the functionality of step (1) in this controller and provide their
    # own step (2) for DOM updates (by listening on the corresponding events).
    }
      $(document).on('StockArticle#update', function(e) {
        $.ajax({
          url: '#{show_on_stock_article_update_stock_articles_path}',
          type: 'get',
          data: {id: e.stock_article_id},
          contentType: 'application/json; charset=UTF-8'
        });
      });
    });

.row-fluid
  .span6
    = render :partial => 'stock_article_details', :locals => {:stock_article => @stock_article}
  
  .span6
    %h2= t('.stock_changes')
    %table.table.table-hover#stock_changes
      %thead
        %tr
          %th= t '.datetime'
          %th= t '.reason'
          %th= t '.change_quantity'
          %th= t '.new_quantity'
      %tbody
        - reversed_history = @stock_article.quantity_history.reverse
        - @stock_changes.each_with_index do |stock_change, index|
          %tr
            %td= l stock_change.created_at
            %td= link_to_stock_change_reason(stock_change)
            %td= stock_change.quantity
            %td= reversed_history[index]
