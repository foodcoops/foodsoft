- title t('.title', article_count: StockArticle.available.count)
- content_for :javascript do
  :javascript
    $(function() {
      $('tr.unavailable').hide();
      
    #{##########################################################################
    # Publish/subscribe pattern for loose coupling of
    #   (1) AJAX database manipulation and
    #   (2) DOM updates for the particular view
    ############################################################################
    # * THIS STARTS STEP (2)
    # * subscribe to document's events which are published/triggered by step (1)
    # * possibly launch a second AJAX request to retreive the source code of the
    #   new DOM elements
    #
    # NOTE: This is a special case because the same controller (stockit) is
    # responsible for steps (1) and (2). However, there are other views which
    # employ the functionality of step (1) in this controller and provide their
    # own step (2) for DOM updates (by listening on the corresponding events).
    }
      $(document).on('StockArticle#create', function(e) {
        $.ajax({
          url: '#{index_on_stock_article_create_stock_articles_path}',
          type: 'get',
          data: {id: e.stock_article_id},
          contentType: 'application/json; charset=UTF-8'
        });
      });
      
      $(document).on('StockArticle#destroy', function(e) {
        $('#stockArticle-' + e.stock_article_id).remove();
      });
      
      $(document).on('StockArticle#update', function(e) {
        $.ajax({
          url: '#{index_on_stock_article_update_stock_articles_path}',
          type: 'get',
          data: {id: e.stock_article_id},
          contentType: 'application/json; charset=UTF-8'
        });
      });
    })

.well.well-small
  .btn-toolbar
    .btn-group.pull-right
      = link_to '#', data: {toggle: 'dropdown'}, class: 'btn dropdown-toggle' do
        = t '.view_options'
        %span.caret
      %ul.dropdown-menu
        %li= link_to t('.toggle_unavailable'), "#", 'data-toggle-this' => 'tr.unavailable', tabindex: -1

    .btn-group
      = link_to_if @current_user.role_orders?, t('.order_online'), new_order_path(supplier_id: 0),
        class: 'btn', class: 'btn btn-primary'
      = link_to t('.new_stock_article'), new_stock_article_path, class: 'btn', remote: true
      = link_to t('.new_stock_taking'), new_stock_taking_path, class: 'btn'
      = link_to t('.show_stock_takings'), stock_takings_path, class: 'btn'

    .btn-group
      = link_to '#', data: {toggle: 'dropdown'}, class: 'btn dropdown-toggle' do
        = t '.new_delivery'
        %span.caret
      %ul.dropdown-menu
        - Supplier.all.each do |supplier|
          %li= link_to supplier.name, new_supplier_delivery_path(supplier), tabindex: -1

%table.table.table-hover#articles
  %thead
    %tr
      %th= t '.article.article'
      %th= t '.article.stock'
      %th= t '.article.ordered'
      %th= t '.article.available'
      %th= t '.article.unit'
      %th= t '.article.price'
      %th= t '.article.vat'
      %th= t '.article.supplier'
      %th= t '.article.category'
      %th
  %tbody#articles-tbody
    - for stock_article in @stock_articles
      = render :partial => 'stock_article', :locals => {:stock_article => stock_article}
%p
  = t '.stock_worth'
  = number_to_currency StockArticle.stock_value
  |
  =t '.stock_count'
  = StockArticle.available.count

