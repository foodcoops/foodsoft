= f.input :nick
= f.input :first_name
= f.input :last_name
= f.input :email
= f.input :phone
= f.input :password, :required => f.object.new_record?
= f.input :password_confirmation

.settings
  %h4
    =t 'simple_form.labels.settings.settings_groups'
    = f.simple_fields_for :settings_attributes do |s|
    
      .settings-group
        %div{class: 'control-group h_wrapper'}
          %h5{class: 'control-label'}
            = t 'simple_form.labels.settings.settings_group.profile'
          
        = s.simple_fields_for :profile, defaults: { inline_label: true } do |profile|
          = profile.input 'language',         as: :select,  collection: available_locales, required: false, selected: f.object.settings.profile['language']
          = profile.input 'phone_is_public',  as: :boolean, label: false, input_html: { checked: f.object.settings.profile['phone_is_public'] }
          = profile.input 'email_is_public',  as: :boolean, label: false, input_html: { checked: f.object.settings.profile['email_is_public'] }
          = profile.input 'name_is_public',   as: :boolean, label: false, input_html: { checked: f.object.settings.profile['name_is_public'] }
    
      .settings-group
        %div{class: 'control-group'}
          %h5{class: 'control-label'}
            =t 'simple_form.labels.settings.settings_group.messages'
         
        = s.simple_fields_for :messages, defaults: { inline_label: true, label: false } do |messages|
          = messages.input 'send_as_email',   as: :boolean, input_html: { checked: f.object.settings.messages['send_as_email'] }
          
      .settings-group
        %div{class: 'control-group'}
          %h5{class: 'control-label'}
            = t 'simple_form.labels.settings.settings_group.notify'
          
        = s.simple_fields_for :notify, defaults: { inline_label: true, label: false } do |notify|
          = notify.input 'order_finished',    as: :boolean, input_html: { checked: f.object.settings.notify['order_finished'] }
          = notify.input 'negative_balance',  as: :boolean, input_html: { checked: f.object.settings.notify['negative_balance'] }
          = notify.input 'upcoming_tasks',    as: :boolean, input_html: { checked: f.object.settings.notify['upcoming_tasks'] }
  