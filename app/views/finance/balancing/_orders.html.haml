- title " "+t('.for')+" "+Supplier.find(params[:supplier_id]).name if params.has_key?(:supplier_id) 
- unless @orders.empty?
  - content_for :actionbar do
    .btn-group
      = link_to '#', data: {toggle: 'dropdown'}, class: 'btn dropdown-toggle' do
        = t '.name'
        %span.caret
      %ul.dropdown-menu
        %li= link_to t('.show_all'), "?"
        - Supplier.undeleted.order(:name).each do |supplier|
          %li= link_to supplier.name, "?" + {:supplier_id => supplier.id}.to_query
  - if Order.finished.count > 20
    = items_per_page
  = pagination_links_remote @orders
  %table.table.table-striped
    %thead
      %tr
        %th= t('.name')
        %th= t('.end')
        %th= t('.state')
        %th= heading_helper Order, :updated_by
        %th
    %tbody
      - @orders.each do |order|
        - if !params.has_key?(:supplier_id) || order.supplier.id.to_s == params[:supplier_id]
          %tr{:class => cycle("even","odd", :name => "order")}
            %td= link_to truncate(order.name), new_finance_order_path(order_id: order.id)
            %td=h format_time(order.ends) unless order.ends.nil?
            %td= order.closed? ? t('.cleared', amount: number_to_currency(order.foodcoop_result)) : t('.ended')
            %td= show_user(order.updated_by)
            %td
              - unless order.closed?
                - if current_user.role_orders?
                  - unless order.stockit?
                    = link_to t('orders.index.action_receive'), receive_order_path(order), class: 'btn btn-small'
                  - else
                    = link_to t('orders.index.action_receive'), '#', class: 'btn btn-small disabled'
                = link_to t('.clear'), new_finance_order_path(order_id: order.id), class: 'btn btn-small btn-primary'
- else
  %i= t('.no_closed_orders')
