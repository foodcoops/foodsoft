- content_for :javascript do
  :javascript
    const units = #{raw(@all_units.to_json)};
- content_for :javascript do
  = simple_fields_for "articles[TEMPLATEREPLACEMARKER]" do |form|
    :javascript
      const ratioTemplateHtml = "#{escape_javascript(render(partial: 'shared/article_unit_ratio', locals: {article_unit_ratio: @empty_article_unit_ratio, f: form, article_unit_ratio_counter: -1}))}";
- price_markup = FoodsoftConfig[:price_markup].to_f
= render partial: 'shared/js_templates/unit_conversion_popover_template'
%table.table
  %thead
    %tr
      %th= heading_helper Article, :availability, short: true
      %th= heading_helper Article, :name
      - unless @original_units.nil?
        %th= heading_helper Article, :original_unit
      %th= heading_helper Article, :unit
      %th= heading_helper Article, :price, short: true
      %th= heading_helper Article, :order_number, short: true
      %th= heading_helper Article, :note
      %th= heading_helper Article, :article_category
      %th= heading_helper Article, :tax
      %th= heading_helper Article, :deposit
  %tbody
    - @articles.each_with_index do |article, index|
      %tr{:id => "article_row_#{article.id}"}
        = simple_fields_for "articles[#{article.id}]", article.latest_article_version do |form|
          %td
            = yield form # allow to add hidden fields to form
            = form.check_box 'availability'
          %td= form.text_field 'name', class: 'input-medium'
          - unless @original_units.nil?
            %td
              = "\"#{@original_units[article.id]}\"" unless @original_units[article.id].blank?
          %td
            .d-flex.gap-1.align-items-center
              = form.hidden_field :unit, id: 'article_unit_hidden', value: ''
              = form.input :supplier_order_unit, as: :select, collection: @article_units, label: false, value: article.supplier_order_unit, include_blank: t('.custom_unit'), input_html: {class: 'input-medium'}
              = form.input :unit, input_html: {class: 'input-mini ml-1'}, label: false
              %div.btn-link.toggle-extra-units.text-decoration-none.default-values
                %i.icon-cog
            %div.extra-unit-fields.form-horizontal
              .fold-line
                .control-group
                  %label.control-label{for: 'unit_ratios'}
                    = "Unit ratios"
                  %table#fc_base_price{:class => "controls"}
                    %tbody
                      - ratios = article.article_unit_ratios
                      = render :partial => 'shared/article_unit_ratio', :as => 'article_unit_ratio', :collection => ratios, locals: {f: form, original_ratios: article&.article_unit_ratios}
                    %tfoot
                      %tr
                        %td{:colspan => 6}
                          = link_to t('.add_ratio'), '#', 'data-add-ratio' => true, class: 'btn', title: t(".add_ratio")
              .fold-line
                = form.input :minimum_order_quantity, label: "Mininum order quantity" do
                  .input-append
                    = form.input_field :minimum_order_quantity, class: 'input-mini', title: "total minimum order quantity for this article"
              .fold-line
                = form.input :billing_unit, as: :select, collection: [], input_html: {'data-initial-value': article.billing_unit, class: 'input-medium'}, include_blank: false
              .fold-line
                = form.input :group_order_granularity, label: "Allow orders per", input_html: {class: 'input-mini', title: "steps in which ordergroups can order this article"}
                = form.input :group_order_unit, as: :select, collection: [], input_html: {'data-initial-value': article.group_order_unit, class: 'input-medium'}, label: '&times;'.html_safe, include_blank: false
          %td
            .d-flex.gap-1
              .input-prepend
                %span.add-on= t 'number.currency.format.unit'
                = form.text_field 'price', class: 'input-mini', style: 'width: 45px'
              .input.d-flex.gap-1.control-group
                %label=t('articles.form.per')
                = form.input :price_unit, as: :select, collection: [], input_html: {'data-initial-value': article.price_unit, class: 'input-medium'}, label: false, wrapper: false, include_blank: false
          %td= form.text_field 'order_number', class: 'input-mini'
          %td= form.text_field 'note', class: 'input-medium'
          %td= form.collection_select 'article_category_id', @article_categories,
            :id, :name, { :include_blank => true }, class: 'input-small'
          %td.input-append
            = form.text_field 'tax', class: 'input-mini'
            %span.add-on %
          %td= form.text_field 'deposit', class: 'input-mini'
        - unless article.errors.empty?
          %tr.alert
            %td(colspan="10")= article.errors.full_messages.join(", ")
- content_for :javascript do
  - @articles.each_with_index do |article, index|
    :javascript
      articleUnitRatioTemplate$ = $($.parseHTML(ratioTemplateHtml.replace(/TEMPLATEREPLACEMARKER/g, '#{article.id}')));
      new ArticleForm(articleUnitRatioTemplate$, $('#article_row_#{article.id}'), units, #{price_markup}, $('#article_row_#{article.id}').closest('form'), 'articles_#{article.id}', 'articles[#{article.id}]');
    - if index + 1 === @articles.length
      :javascript
        $('input[name="commit"]').removeAttr('disabled');
