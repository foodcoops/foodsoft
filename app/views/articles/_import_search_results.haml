- if @articles.empty?
  %p= t '.not_found'
- else
  = pagination_links_remote @articles
  %table.table.table-striped
    %thead
      %tr
        %th= heading_helper Article, :name
        %th= heading_helper Article, :origin
        %th= heading_helper Article, :manufacturer
        %th= heading_helper Article, :note
        %th{:style => "width:4em"}= heading_helper Article, :price
        %th= heading_helper Article, :unit
        %th
    %tbody
      - for article in @articles
        %tr{id: "shared_article_#{article.id}"}
          %td= highlight article.name, params.fetch(:name_cont_all_joined, '').split(' ')
          %td= article.origin
          %td= article.manufacturer
          %td{title: article.note}= truncate(article.note, length: 11)
          %td= number_to_currency(article.price)
          %td
            = article.unit
            - if article.unit_quantity > 1
              %span{style: 'color: grey'} &times; #{article.unit_quantity} #{pkg_helper_icon}
          %td.actions
            - logger.debug "[debug] #{article.attributes.inspect}"
            - if @supplier.articles.undeleted.where(order_number: article.number).exists?
              %i.icon-ok= t '.already_imported'
            - else
              = link_to t('.action_import'), import_supplier_articles_path(@supplier, shared_article_id: article.id, direct: true),
                remote: true, class: 'btn btn-small btn-success'
